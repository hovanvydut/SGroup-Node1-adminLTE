<script>
    const URL_UPLOAD = '/admin/newpost/image';
    tinymce.init({
        selector: 'textarea#myEditor',
        plugins: 'print preview importcss searchreplace autolink autosave save directionality visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons paste',
        mobile: {
            plugins: 'print preview importcss searchreplace autolink autosave save directionality visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount textpattern noneditable help charmap quickbars emoticons advtable paste'
        },
        menubar: 'file edit view insert format tools table tc help',
        toolbar: 'bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | image codesample | numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile media template link anchor  | a11ycheck ltr rtl | showcomments addcomment | outdent indent |',
        autosave_ask_before_unload: true,
        autosave_interval: "30s",
        autosave_prefix: "{path}{query}-{id}-",
        autosave_restore_when_empty: true,
        autosave_retention: "20m",
        image_advtab: true,
        content_css: [
            'fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
            'www.tiny.cloud/css/codepen.min.css'
        ],
        importcss_append: true,
        height: 700,
        image_caption: true,
        quickbars_selection_toolbar: 'bold italic | quicklink h2 h3 blockquote quickimage quicktable',
        noneditable_noneditable_class: "mceNonEditable",
        toolbar_mode: 'sliding',
        spellchecker_dialog: true,
        spellchecker_whitelist: ['Ephox', 'Moxiecode'],
        content_style: ".mymention{ color: gray; }",
        contextmenu: "link image imagetools table configurepermanentpen",
        a11y_advanced_options: true,
        extended_valid_elements: [
            'p[class=full-post__para|align<center?justify?left?right|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title]',
        ],
        formats: {
            h1: {
                block: 'h1',
                classes: 'full-post__main-title'
            },
            h2: {
                block: 'h2',
                classes: 'full-post__subtitle'
            },
            p: {
                block: 'p',
                classes: 'full-post__para'
            }
        },
        paste_as_text: true,
        paste_retain_style_properties: "",
        // valid_classes: {
        //     'h2': 'full-post__subtitle',
        //     'p': 'full-post__para',
        //     'h1': 'full-post__title'
        // },
        content_style: 'a {color: blue}',
        // codesample_global_prismjs: true,
        images_upload_handler: function (blobInfo, success, failure) {
            var xhr, formData;
            xhr = new XMLHttpRequest();
            xhr.withCredentials = false;
            xhr.open('POST', URL_UPLOAD);
            xhr.onload = function () {
                var json;
                if (xhr.status != 200) {
                    failure('HTTP Error: ' + xhr.status);
                    return;
                }
                json = JSON.parse(xhr.responseText);

                if (!json || typeof json.location != 'string') {
                    failure('Invalid JSON: ' + xhr.responseText);
                    return;
                }
                success(json.location);

            };
            formData = new FormData();
            formData.append('imageUpload', blobInfo.blob(), blobInfo.filename());
            xhr.send(formData);
        }
    });

</script>
